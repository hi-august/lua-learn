# 启动resty
#  sudo /usr/local/ngx_openresty/nginx/sbin/nginx -c /opt/lua-learn/filminfo/conf/nginx.conf
user  nobody;
worker_processes  auto;

error_log  logs/filminfo-error.log  info;
pid        logs/filminfo-nginx.pid;
master_process on;
worker_rlimit_core 400000000;
working_directory /tmp;

events {
    worker_connections  1024;
}

http {
    include  /usr/local/ngx_openresty/nginx/conf/mime.types;
    # default_type  application/octet-stream;



    log_format  main    '$http_x_real_ip|$http_x_forwarded_for|$remote_addr|'
                        '$time_local|$request|$status|$request_time|'
                        '$body_bytes_sent|$http_referer|$http_user_agent|'
                        '$http_x_yf_appid|$http_x_yf_token|$http_x_yf_rid|'
                        '$http_x_yf_sign|$http_x_yf_platform|$http_x_yf_version|$http_xy_yf_channel|';

    access_log  logs/filminfo-access.log  main;
    lua_code_cache  on;
    sendfile        on;

    client_body_buffer_size 16m;
    client_max_body_size 16m;
    client_body_timeout 3m;
    resolver 127.0.1.1;
    tcp_nodelay on;

    keepalive_timeout  65;
    # lua_package_cpath '/usr/local/ngx_openresty/lualib/?.so;/opt/yf-filminfo/libs/?.so;;';
    # lua_package_path "/opt/yf-filminfo/lua/?.lua;/opt/yf-filminfo/libs/?.lua;/opt/lua-resty-baselib/libs/?.lua;/opt/lua-resty-baselib/libs/?/init.lua;/opt/lua-resty-stats/lib/?.lua;/opt/lua-resty-stats/lib/?/init.lua;;";
    # lua外部库路径,搜索路径
    lua_package_path "/usr/local/ngx_openresty/lualib/?.lua;/opt/lua-learn/lualib/?.lua;/opt/lua-learn/lualib/?/init.lua;/opt/lua-learn/filminfo/lua/?.lua;/opt/lua-learn/filminfo/?.lua;";
    # worker进程启动执行
    # 复制到所有全局变量到Worker进程
    init_worker_by_lua_file '/opt/lua-learn/filminfo/worker_init.lua';

    lua_socket_buffer_size 256k;
    lua_check_client_abort off;


    #gzip  on;


    server {
        listen       8100 default;

        location / {
            content_by_lua '
                --状态码
                ngx.status=404
                --输出响应,自动加\n
                ngx.say("bad request...");
                ngx.say("必须使用域名访问，否则无法找到你访问的服务")
            ';
        }

        # debug模式,copy curl命令进行复现
        access_by_lua_file '/opt/lua-learn/filminfo/lua/access/filminfo_access.lua';

        location /test/ {
            content_by_lua_file "/opt/lua-learn/filminfo/lua/view/lua_view_test.lua";
        }
        location /filminfo/ {
            content_by_lua_file "/opt/lua-learn/filminfo/lua/view/filminfoview.lua";
        }
        # config检查
        location = /config {
            allow 127.0.0.1;
            deny all;
            content_by_lua '
                local config = require("config")
                local config_util = require("core.config_util")
                ngx.say(config_util.config_to_string(config))
            ';
        }

    }

}
